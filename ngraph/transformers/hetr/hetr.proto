syntax = "proto3";

import "ngraph/op_graph/serde/ops.proto";

service Hetr {
    rpc BuildTransformer (BuildTransformerRequest) returns (BuildTransformerReply) {}
    rpc CloseTransformer (CloseTransformerRequest) returns (CloseTransformerReply) {}
    rpc Computation (stream ComputationRequest) returns (ComputationReply) {}
    rpc FeedInput (FeedInputRequest) returns (FeedInputReply) {}
    rpc GetResults (GetResultsRequest) returns (GetResultsReply) {}
    rpc Close (CloseRequest) returns (CloseReply) {}
}

message Value {
    oneof value {
        Scalar scalar = 1;
        Tensor tensor = 2;
    }
}

message BuildTransformerRequest {
    string transformer_type = 1;
}

message BuildTransformerReply {
    bool status = 1;
    string message = 2;
}

message CloseTransformerRequest {
}

message CloseTransformerReply {
    bool status = 1;
    string message = 2;
}

message ComputationRequest {
    repeated Op ops = 1;
    repeated Edge edges = 2;
    repeated Op returns = 3;
    repeated Op placeholders = 4;
}

message ComputationReply {
    int32 comp_id = 1;
    string message = 2;
}

message FeedInputRequest {
    int32 comp_id = 1;
    repeated Value values = 2; 
}

message FeedInputReply {
    bool status = 1;
    string message = 2;
}

message GetResultsRequest {
    int32 comp_id = 1;
}

message GetResultsReply {
    bool status = 1;
    string message = 2;
    repeated Value results = 3;
}

message CloseRequest {
}

message CloseReply {
    string message = 1;
}
